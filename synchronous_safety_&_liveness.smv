MODULE main
VAR
  proc0 : distinguished_process(proc3.value);
  proc1 : general_process(proc0.value);
  proc2 : general_process(proc1.value);
  proc3 : general_process(proc2.value);

-- No deadlock arises
LTLSPEC G ( proc0.value = proc3.value |
            proc1.value != proc0.value |
            proc2.value != proc1.value |
            proc3.value != proc2.value )

-- Safety Condition
LTLSPEC G (( proc0.value = proc3.value & proc1.value = proc0.value & proc2.value = proc1.value & proc3.value = proc2.value ) |
           ( proc0.value != proc3.value & proc1.value != proc0.value & proc2.value = proc1.value & proc3.value = proc2.value ) |
           ( proc0.value != proc3.value & proc1.value = proc0.value & proc2.value != proc1.value & proc3.value = proc2.value ) |
           ( proc0.value != proc3.value & proc1.value = proc0.value & proc2.value = proc1.value & proc3.value != proc2.value ) )

-- Liveness Condition
LTLSPEC G F proc0.value = proc3.value
LTLSPEC G F proc1.value != proc0.value
LTLSPEC G F proc2.value != proc1.value
LTLSPEC G F proc3.value != proc2.value


MODULE distinguished_process(prev_value)
VAR
  value : 0..9;
ASSIGN
  init(value) := 0;
  next(value) :=
    case
      value = prev_value  : (prev_value + 1) mod 10;
      TRUE                : value;
    esac;

MODULE general_process(prev_value)
VAR
  value : 0..9;
ASSIGN
  init(value) := 0;
  next(value) :=
    case
      value != prev_value : prev_value;
      TRUE                : value;
    esac;
